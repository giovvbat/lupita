b const guess = 10;

b string = 10 + 8;

enum oi {
    a guess = in(7);
    x float = 7;
}

teste vector<int>;

teste2 matrix<vector<string>>;

struct Teste {
    a int = oi();
}

b string = oi();

//true

enum testteee {
    a int;
    x float;
}

Teste t;

// comentario

function teste() int {
    galileu guess = oi();
    
    match (oi()) {
        case 9: x = 11;
        default: xxxxxx *= 10;
    }

    b = scan();

    print((oi(8 + 2 / 3 + (matrizz[i, i])) + struuuct.i + veeeetor[i]));

    kchnka guess = 10;

    for(i int; i=0; iiiiiii+=1) {
        i=1;
    }

    oi string;

    teste T;

    teste vector<int>;

    teste2 matrix<vector<bool>>;

    repeat {
        x = 11;
    } until (teste(oi));

    a int;
}

function teste() int {
    oi();
}

procedure main() {
    teste();
    x = 10;

    teste t;

    if(oi and oi(true)) {
        x int;
    }

    iiiiiii bool = 10000;
}

// comentario